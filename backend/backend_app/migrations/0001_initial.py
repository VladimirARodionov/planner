# Generated by Django 5.1.6 on 2025-03-02 16:07

import datetime
import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
import telegram_django_bot.models
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='TaskDuration',
            fields=[
                ('id', models.BigIntegerField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100, verbose_name='Название продолжительности')),
                ('days', models.IntegerField(default=1, verbose_name='Количество дней')),
            ],
            options={
                'verbose_name': 'Продолжительность задачи',
                'verbose_name_plural': 'Продолжительности задач',
            },
        ),
        migrations.CreateModel(
            name='TaskPriority',
            fields=[
                ('id', models.BigIntegerField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100, verbose_name='Название приоритета')),
            ],
            options={
                'verbose_name': 'Приоритет задачи',
                'verbose_name_plural': 'Приоритеты задач',
            },
        ),
        migrations.CreateModel(
            name='TaskType',
            fields=[
                ('id', models.BigIntegerField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100, verbose_name='Название типа')),
            ],
            options={
                'verbose_name': 'Тип задачи',
                'verbose_name_plural': 'Типы задач',
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('id', models.BigIntegerField(primary_key=True, serialize=False)),
                ('seed_code', models.IntegerField(default=telegram_django_bot.models._seed_code)),
                ('telegram_username', models.CharField(blank=True, max_length=64, null=True)),
                ('telegram_language_code', models.CharField(default='en', max_length=16)),
                ('timezone', models.DurationField(default=datetime.timedelta(seconds=10800))),
                ('current_utrl', models.CharField(blank=True, default='', max_length=64)),
                ('current_utrl_code_dttm', models.DateTimeField(blank=True, null=True)),
                ('current_utrl_context_db', models.CharField(blank=True, default='{}', max_length=4096)),
                ('current_utrl_form_db', models.CharField(blank=True, default='{}', max_length=4096)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Task',
            fields=[
                ('id', models.BigIntegerField(primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=255, verbose_name='Название задачи')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Описание')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('deadline', models.DateTimeField(verbose_name='Срок выполнения')),
                ('completed', models.BooleanField(default=False, verbose_name='Выполнено')),
                ('completed_at', models.DateTimeField(blank=True, null=True, verbose_name='Дата выполнения')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tasks', to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
                ('duration', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='tasks', to='backend_app.taskduration', verbose_name='Продолжительность')),
                ('priority', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='tasks', to='backend_app.taskpriority', verbose_name='Приоритет')),
                ('task_type', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='tasks', to='backend_app.tasktype', verbose_name='Тип задачи')),
            ],
            options={
                'verbose_name': 'Задача',
                'verbose_name_plural': 'Задачи',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Reminder',
            fields=[
                ('id', models.BigIntegerField(primary_key=True, serialize=False)),
                ('remind_at', models.DateTimeField(verbose_name='Время напоминания')),
                ('sent', models.BooleanField(default=False, verbose_name='Отправлено')),
                ('task', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reminders', to='backend_app.task', verbose_name='Задача')),
            ],
            options={
                'verbose_name': 'Напоминание',
                'verbose_name_plural': 'Напоминания',
                'ordering': ['remind_at'],
            },
        ),
    ]
